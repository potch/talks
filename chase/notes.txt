Firefox OS as a name is actually more than just branding. The OS *is* Firefox. The rendering engine underneath the hood of Firefox is called Gecko, and the code-name for the project is Boot To Gecko, or B2G. When you use the phone, everything you see is rendered by the same engine that renders webpages in Firefox on your desktop computer or mobile phone.

When we talk about Firefox OS we say "The Web Is The Platform". What does that actually mean? On current mobile smartphone platforms, Web Apps are in a segregated class of content. They run within a web browser app, and can't play with all the same toys and capabilities of the Native apps with which they compete. But what if the web app *was* the native app? That's what we're doing with Firefox OS. The OS, the entire operating environment, is web content. And I mean everything. We've taken the web browser and done away with those pesky bits around the edges. When you look at the lock screen, you're looking at HTML, CSS, and JavaScript. The home screen? Same thing. The dialer? You guessed it. How are we doing this? Well we're making a big technical investment in the Web as a technical platform, and teaching it a few new tricks. By exposing new APIs to apps to web content such as APIs for making phone calls, managing bluetooth, and connecting to WiFi, we've bridged the "Phone Gap", as it were. How is this different from previous attempts at a web-based OS? We're socializing our ideas, developing them in the open, and using consensus to build these new APIs into recognized standards that other platforms can implement and expose to their web content.

At Mozilla, we take the idea of "Open" very seriously. Open source is awesome, obviously. And Firefox OS is of course an Open Source project, just like its big browser brother. But unlike Android, where the source code is released to the public after development work is done, Firefox OS is *developed* in the open. You can watch the code change day-by-day on GitHub, report bugs, comment on changes, even watch and participate in the discussions about the project. We call this approach "Open Engineering", and it permeates many aspects of Firefox OS.

For example, we are building the Firefox Marketplace as a way for developers to expose their work to users and monetize their content. However, the API that Firefox OS uses to install apps is available to all web content. What does that mean? It means any website can offer to install an app. It means that instead of one central app store, we can have a rich ecosystem of competing app stores. Are you a business who wants to self-publish apps? Your website can install apps directly on users' phones with no middleman demanding a cut. We believe the same healthy competition that drives innovation in the rest of the technology space can and will work in the world of apps.

Speaking of apps, what *is* a Firefox OS app exactly?